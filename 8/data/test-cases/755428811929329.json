{
  "uid" : "755428811929329",
  "name" : "test_count_posts_after_delete_post[chrome]",
  "fullName" : "test_src.Tests.test06_delete_article.test_TC08.TestDeleteArticle#test_count_posts_after_delete_post",
  "historyId" : "1e053bdb0a91ca26641d91e44859e04e",
  "time" : {
    "start" : 1629232166833,
    "stop" : 1629232172416,
    "duration" : 5583
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "self = <test_src.Tests.test06_delete_article.test_TC08.TestDeleteArticle object at 0x7f88ec1e9070>\n\n    def test_count_posts_after_delete_post(self):\n        try:\n            self.MainPage = MainPage(self.driver)\n            assert self.MainPage.is_username_displayed() == TestData.reg_test_valid[0]\n            self.MainPage.scroll_to_bottom_of_the_main_page()\n>           assert self.MainPage.is_next_btn_displayed() is True\n\ntest_src/Tests/test06_delete_article/test_TC08.py:93: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntest_src/Pages/MainPage.py:64: in is_next_btn_displayed\n    return self.is_element_displayed(MainPgWebElements.list_scroll_next_btn)\ntest_src/Pages/base_commands.py:38: in is_element_displayed\n    element = WebDriverWait(self.driver, 5).until(EC.visibility_of_element_located(by_locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"082f5cce17bb722a142bcab95c6bc7eb\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x7f88ec1eaa00>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.9.5/x64/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "init_driver",
    "time" : {
      "start" : 1629232153348,
      "stop" : 1629232154569,
      "duration" : 1221
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "init_driver::0",
    "time" : {
      "start" : 1629232172579,
      "stop" : 1629232172685,
      "duration" : 106
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('init_driver')"
  }, {
    "name" : "parentSuite",
    "value" : "test_src.Tests.test06_delete_article"
  }, {
    "name" : "suite",
    "value" : "test_TC08"
  }, {
    "name" : "subSuite",
    "value" : "TestDeleteArticle"
  }, {
    "name" : "host",
    "value" : "fv-az33-581"
  }, {
    "name" : "thread",
    "value" : "3733-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_src.Tests.test06_delete_article.test_TC08"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "init_driver",
    "value" : "'chrome'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "@pytest.mark.usefixtures('init_driver')" ]
  },
  "source" : "755428811929329.json",
  "parameterValues" : [ "'chrome'" ]
}